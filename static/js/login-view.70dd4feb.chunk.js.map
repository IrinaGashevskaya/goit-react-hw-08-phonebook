{"version":3,"sources":["components/Loader/index.js","views/LoginView/LoginView.js"],"names":["LoginView","dispatch","useDispatch","isLoading","useSelector","authSelectors","getLoading","useState","email","setEmail","password","setPassword","handleChange","e","target","name","value","onSubmit","preventDefault","trim","toast","error","authOperations","logIn","className","autoComplete","TextField","label","variant","color","type","onChange","Button","size","Loader"],"mappings":"gJAAA,iD,6LCSe,SAASA,IACtB,IAAMC,EAAWC,cACXC,EAAYC,YAAYC,IAAcC,YAC5C,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAACC,GACpB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,OAAQD,GACN,IAAK,QACHN,EAASO,GACT,MAEF,IAAK,WACHL,EAAYK,GACZ,MAEF,QACE,SAcN,OACE,uBAAMC,SAXa,SAACJ,GAEpB,GADAA,EAAEK,iBACmB,KAAjBV,EAAMW,QAAqC,KAApBT,EAASS,OAClC,OAAOC,IAAMC,MAAM,2CAErBpB,EAASqB,IAAeC,MAAM,CAAEf,QAAOE,cACvCD,EAAS,IACTE,EAAY,KAIkBa,UAAU,UAAUC,aAAa,MAA/D,UACE,cAACC,EAAA,EAAD,CACEC,MAAM,QACNC,QAAQ,WACRC,MAAM,UACNC,KAAK,QACLf,KAAK,QACLC,MAAOR,EACPuB,SAAUnB,EACVY,UAAU,UAGZ,cAACE,EAAA,EAAD,CACEC,MAAM,WACNC,QAAQ,WACRC,MAAM,UACNC,KAAK,WACLf,KAAK,WACLC,MAAON,EACPqB,SAAUnB,EACVY,UAAU,WAGVrB,GACA,cAAC6B,EAAA,EAAD,CAAQJ,QAAQ,YAAYC,MAAM,UAAUI,KAAK,QAAQH,KAAK,SAA9D,oBAKD3B,GAAa,cAAC+B,EAAA,EAAD","file":"static/js/login-view.70dd4feb.chunk.js","sourcesContent":["export { default } from \"./Loader\";\r\n","import { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { authOperations, authSelectors } from \"../../redux/auth\";\r\nimport { toast } from \"react-toastify\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport LoaderApp from \"../../components/Loader\";\r\nimport \"./LoginView.css\";\r\n\r\nexport default function LoginView() {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(authSelectors.getLoading);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case \"email\":\r\n        setEmail(value);\r\n        break;\r\n\r\n      case \"password\":\r\n        setPassword(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (email.trim() === \"\" || password.trim() === \"\") {\r\n      return toast.error(\"ðŸ’© Please fill in all fields!\");\r\n    }\r\n    dispatch(authOperations.logIn({ email, password }));\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"logForm\" autoComplete=\"off\">\r\n      <TextField\r\n        label=\"Email\"\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        type=\"email\"\r\n        name=\"email\"\r\n        value={email}\r\n        onChange={handleChange}\r\n        className=\"field\"\r\n      />\r\n\r\n      <TextField\r\n        label=\"Password\"\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        type=\"password\"\r\n        name=\"password\"\r\n        value={password}\r\n        onChange={handleChange}\r\n        className=\"field\"\r\n      />\r\n\r\n      {!isLoading && (\r\n        <Button variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\">\r\n          Log in\r\n        </Button>\r\n      )}\r\n\r\n      {isLoading && <LoaderApp />}\r\n    </form>\r\n  );\r\n}\r\n"],"sourceRoot":""}